╔═══════════════════════════════════════════════════════════════════════╗
║ String
╠═══════════════════════════════════════════════════════════════════════╝


╟─┬─────────────────────────────────────────────────────────────────────┐
  │ Format
  ├─┬───────────────────────────────────────────────────────────────────┘
    │ Hexadecimal string
    ├─┬─────────────────────────────────────────────────────────────────┘
      object.toString("X")
			
    ├─┬─────────────────────────────────────────────────────────────────┐
      char c = Console.ReadKey().KeyChar;		
      Console.WriteLine("{0:X4}", (uint)c); // uppercase
      Console.WriteLine("{0:x4}", (uint)c)); // lowercase

╟─├─┬───────────────────────────────────────────────────────────────────┐
    │ string.Format()
    ├─┬─────────────────────────────────────────────────────────────────┘
      string value = string.Format("{0:F3}", number);
		

╟─├─┬───────────────────────────────────────────────────────────────────┐
    │ Custom Numeric Formats
    ├─┬─────────────────────────────────────────────────────────────────┤
      ├ "{0:0.00}", 1
      ├─ Output: 1,00
      ├─────────────────────────────────────────────────────────────────┤
      ├ "{0:#####.###}", 0.23488
      ├─ Output: ,235
      ├─────────────────────────────────────────────────────────────────┤
      ├ "{0:#####}", 12345.67
      ├─ Output: 12346
      ├─────────────────────────────────────────────────────────────────┤
      ├ "{0:(0#) ### ## ##}", 29342525
      ├─ Output: (02) 934 25 25
      ├─────────────────────────────────────────────────────────────────┤
      ├ "{0:%##}", 0.234
      ├─ Output: %23
      ├─────────────────────────────────────────────────────────────────┤
      ├ "{0:000.0%}", 0.23488
      ├─ Output: 023.5%
      ├─────────────────────────────────────────────────────────────────┤
      ├ "{0:.00%}", 10.023488
      ├─ Output: 1002.35%
      ├─────────────────────────────────────────────────────────────────┤

╟─├─┬───────────────────────────────────────────────────────────────────┐
    │ Standard Numeric Formats
    ├─┬─────────────────────────────────────────────────────────────────┤
      ├ "{0:C2}", 123.456
      ├─ Output: 123,46 лв.
      ├─────────────────────────────────────────────────────────────────┤
      ├ "{0:D6}", -1234
      ├─ Output: -001234
      ├─────────────────────────────────────────────────────────────────┤
      ├ "{0:E2}", 123
      ├─ Output: 1,23Е+002
      ├─────────────────────────────────────────────────────────────────┤
      ├ "{0:F2}", -123.456
      ├─ Output: -123,46
      ├─────────────────────────────────────────────────────────────────┤
      ├ "{0:N2}", 1234567.8
      ├─ Output: 1 234 567,80
      ├─────────────────────────────────────────────────────────────────┤
      ├ "{0:P}", 0.456
      ├─ Output: 45,60 %
      ├─────────────────────────────────────────────────────────────────┤
      ├ "{0:X}", 254
      ├─ Output: FE
      ├─────────────────────────────────────────────────────────────────┤
		
╟─┬─────────────────────────────────────────────────────────────────────┐
	├─ Null / Empty / White-space
	├─┬───────────────────────────────────────────────────────────────────┘
		String.IsNullOrWhiteSpace(str)
		String.IsNullOrEmpty(str)

╟─┬─────────────────────────────────────────────────────────────────────┐
	│ Get the last n characters from a string
	├─┬───────────────────────────────────────────────────────────────────┘
		string str = "something";
		str = str.Substring(str.Length - n)

╟─┬─────────────────────────────────────────────────────────────────────┐
	│ Returns the last element of a sequence
	├─┬───────────────────────────────────────────────────────────────────┘
		string.Last();
		
╟─┬─────────────────────────────────────────────────────────────────────┐
	│ Repeat a character
	├─┬───────────────────────────────────────────────────────────────────┘
		string tabs = new String('\t', n);

╟─┬─────────────────────────────────────────────────────────────────────┐
	│ Replacing a char at a given index
	├─┬───────────────────────────────────────────────────────────────────┘
		str = str.Remove(3, 2).Insert(3, "ZX");


╟─┬─────────────────────────────────────────────────────────────────────┐
	│ ReferenceEquals()
	├─┬───────────────────────────────────────────────────────────────────┘
		├─ The object.ReferenceEquals method gives you the ability to determine if two objects are in the same memory location.
		├─ In the compilation step of the C# language, string literals are pooled and all references to a specific value will be equal. 



╟─┬─────────────────────────────────────────────────────────────────────┐
	│ Equals() / ==
	├─┬───────────────────────────────────────────────────────────────────┘
		├─ Compares strings. It is not the same as the Compare and CompareTo methods. Equals tests strings for equality. It is invoked with the method name Equals or with the equality operator.

╟─┬─────────────────────────────────────────────────────────────────────┐
	│ string.Compare()
	├─┬───────────────────────────────────────────────────────────────────┘
		├─ bool 

╟─┬─────────────────────────────────────────────────────────────────────┐
	│ Trim() / TrimStart() / TrimEnd()
	├─┬───────────────────────────────────────────────────────────────────┘
		string text = "  {{ Text }} ";
		
		text = text.Trim(new[] { '{', '}' })
		Console.WriteLine(text);
		// "  {{ Text }} "
		
		text = text.Trim(new[] { '{', '}', ' ' })
		Console.WriteLine(text);
		// "Text"

╟─┬─────────────────────────────────────────────────────────────────────┐
	│ Padding
	├─┬───────────────────────────────────────────────────────────────────┘
		str.PadLeft(int length, char symbol)
		str.PadRight(int totalWidth, char symbol)





























─ │ ═ ║

┌ ┐ └ ┘ ┬ ┴ ├ ┤ ┼

╔ ╗ ╚ ╝ ╦ ╩ ╠ ╣ ╬

╒ ╕ ╘ ╛ ╤ ╧ ╞ ╡ ╪

╓ ╖ ╙ ╜ ╥ ╨ ╟ ╢ ╫

▀ ▄ █ ▌ ▐ ░ ▒ ▓ ■ □ ▪ ▫ ▬ ▲ ► ▼ ◄ ◊ ○ ☺ ☻
██

╔═══════════════════════════════════════════════════════════════════════╗
║
╠═══════════════════════════════════════════════════════════════════════╝
╟─
╟─┐
╟─┬─────────────────────────────────────────────────────────────────────┐
╟─┬─────────────────────────────────────────────────────────────────────┐
	│
	├─────────────────────────────────────────────────────────────────────┘
	├─
	├─┐
	├─┬───────────────────────────────────────────────────────────────────┐
	├─┬───────────────────────────────────────────────────────────────────┐
		│
		├───────────────────────────────────────────────────────────────────┘
		├─┬─────────────────────────────────────────────────────────────────┐
			├─┬───────────────────────────────────────────────────────────────┐
				│
				├───────────────────────────────────────────────────────────────┘
				├─┬─────────────────────────────────────────────────────────────┐